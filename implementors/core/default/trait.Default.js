(function() {var implementors = {};
implementors["noise"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Checkerboard.html\" title=\"struct noise::Checkerboard\">Checkerboard</a>","synthetic":false,"types":["noise::noise_fns::generators::checkerboard::Checkerboard"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Cylinders.html\" title=\"struct noise::Cylinders\">Cylinders</a>","synthetic":false,"types":["noise::noise_fns::generators::cylinders::Cylinders"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.BasicMulti.html\" title=\"struct noise::BasicMulti\">BasicMulti</a>","synthetic":false,"types":["noise::noise_fns::generators::fractals::basicmulti::BasicMulti"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Billow.html\" title=\"struct noise::Billow\">Billow</a>","synthetic":false,"types":["noise::noise_fns::generators::fractals::billow::Billow"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Fbm.html\" title=\"struct noise::Fbm\">Fbm</a>","synthetic":false,"types":["noise::noise_fns::generators::fractals::fbm::Fbm"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.HybridMulti.html\" title=\"struct noise::HybridMulti\">HybridMulti</a>","synthetic":false,"types":["noise::noise_fns::generators::fractals::hybridmulti::HybridMulti"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.RidgedMulti.html\" title=\"struct noise::RidgedMulti\">RidgedMulti</a>","synthetic":false,"types":["noise::noise_fns::generators::fractals::ridgedmulti::RidgedMulti"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.OpenSimplex.html\" title=\"struct noise::OpenSimplex\">OpenSimplex</a>","synthetic":false,"types":["noise::noise_fns::generators::open_simplex::OpenSimplex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Perlin.html\" title=\"struct noise::Perlin\">Perlin</a>","synthetic":false,"types":["noise::noise_fns::generators::perlin::Perlin"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.SuperSimplex.html\" title=\"struct noise::SuperSimplex\">SuperSimplex</a>","synthetic":false,"types":["noise::noise_fns::generators::super_simplex::SuperSimplex"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Value.html\" title=\"struct noise::Value\">Value</a>","synthetic":false,"types":["noise::noise_fns::generators::value::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/struct.Worley.html\" title=\"struct noise::Worley\">Worley</a>","synthetic":false,"types":["noise::noise_fns::generators::worley::Worley"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/utils/struct.ColorGradient.html\" title=\"struct noise::utils::ColorGradient\">ColorGradient</a>","synthetic":false,"types":["noise::utils::color_gradient::ColorGradient"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/utils/struct.ImageRenderer.html\" title=\"struct noise::utils::ImageRenderer\">ImageRenderer</a>","synthetic":false,"types":["noise::utils::image_renderer::ImageRenderer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/utils/struct.LightSource.html\" title=\"struct noise::utils::LightSource\">LightSource</a>","synthetic":false,"types":["noise::utils::image_renderer::LightSource"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/utils/struct.NoiseImage.html\" title=\"struct noise::utils::NoiseImage\">NoiseImage</a>","synthetic":false,"types":["noise::utils::noise_image::NoiseImage"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"noise/utils/struct.NoiseMap.html\" title=\"struct noise::utils::NoiseMap\">NoiseMap</a>","synthetic":false,"types":["noise::utils::noise_map::NoiseMap"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()